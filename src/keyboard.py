from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

def main_menu_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìé–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã", callback_data="show_commands")]
    ])

def commands_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã—Å–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", callback_data="list_events")],
        [InlineKeyboardButton(text="üìã–º–æ–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="personal_list")],
        [InlineKeyboardButton(text="Ô∏èüìù—Å–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", callback_data="create_event")]
    ])

def home_button():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè†–î–æ–º–æ–π", callback_data="home")]
    ])

def event_navigation_keyboard(event_index, events, is_subscribed, event_link):
    keyboard = [
        [InlineKeyboardButton(text="‚ùå–û—Ç–ø–∏—Å–∞—Ç—å—Å—è" if is_subscribed else "‚úçÔ∏è–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"{'unsubscribe' if is_subscribed else 'subscribe'}_{events[event_index]['event_id']}")],
        [InlineKeyboardButton(text="üîó–°—Å—ã–ª–∫–∞", url=event_link)]
    ]
    navigation_buttons = []
    if event_index > 0:
        navigation_buttons.append(InlineKeyboardButton(text="–ü—Ä–µ–¥—ã–¥—É—â–µ–µ", callback_data=f"prev_{event_index}"))
    if event_index < len(events) - 1:
        navigation_buttons.append(InlineKeyboardButton(text="–°–ª–µ–¥—É—é—â–µ–µ", callback_data=f"next_{event_index}"))
    keyboard.append([InlineKeyboardButton(text="üè†–î–æ–º–æ–π", callback_data="home")])
    if navigation_buttons:
        keyboard.append(navigation_buttons)
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def personal_event_navigation_keyboard(event_index, events):
    keyboard = [
        [InlineKeyboardButton(text="‚úèÔ∏è–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_{events[event_index]['event_id']}")],
        [InlineKeyboardButton(text="üóëÔ∏è–£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_{events[event_index]['event_id']}")],
        [InlineKeyboardButton(text="üè†–î–æ–º–æ–π", callback_data="home")]
    ]
    navigation_buttons = []
    if event_index > 0:
        navigation_buttons.append(InlineKeyboardButton(text="–ü—Ä–µ–¥—ã–¥—É—â–µ–µ", callback_data=f"personal_prev_{event_index}"))
    if event_index < len(events) - 1:
        navigation_buttons.append(InlineKeyboardButton(text="–°–ª–µ–¥—É—é—â–µ–µ", callback_data=f"personal_next_{event_index}"))
    if navigation_buttons:
        keyboard.append(navigation_buttons)
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
